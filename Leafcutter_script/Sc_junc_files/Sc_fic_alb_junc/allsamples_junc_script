#!/bin/bash

# Define the path to the folder containing the samples
folder_path="/beegfs/data/fslimi/fic_bam/fic_alb_bam/"

# Define the output directory for junction files
output_dir="/beegfs/data/fslimi/fic_junc/fic_alb_junc/"

# Get the list of sample names from the folder path, considering only BAM files
samples=($(ls "${folder_path}" | grep "\.bam$"))

# Define the path to the folder containing the scripts
pathScripts="/beegfs/home/fslimi/scripts/Sc_fic_alb_junc"

# Loop over each sample and create a script for it
for sample_name in "${samples[@]}"; do
    # Create a unique job name for each sample
    job_name="${sample_name}_JunctionExtraction"

    # Define the unique output and error filenames with the Job ID included
    output_file="${pathScripts}/${sample_name}_%j_Junc.out"
    error_file="${pathScripts}/${sample_name}_%j_Junc.err"

    # Define the full path for the submission script
    script="${pathScripts}/slurm_JunctionExtraction_script_${sample_name%.bam}.sh"

    # Create the Slurm submission script
    cat > "$script" <<EOL
#!/bin/bash
#SBATCH --job-name=${job_name}
#SBATCH --nodes=1
#SBATCH --time=01:00:00
#SBATCH --partition=normal
#SBATCH --ntasks=1
#SBATCH --mem=1GB
#SBATCH --output=${output_file}
#SBATCH --error=${error_file}

# Define the directory containing the BAM file
bam_dir="${folder_path}"

# Define the output directory for junction files
output_dir="${output_dir}"

# Define the name of the BAM file to test
bamfile="${sample_name}"

# Move to the directory containing the BAM files
cd "\$bam_dir" || exit

# Print a message indicating which file is being converted
echo "Converting \${bamfile} to \${bamfile}.junc"

# Index the BAM file using samtools
samtools index "\${bamfile}"

# Extract junctions using regtools
regtools junctions extract -s XS -a 8 -m 50 -M 500000 "\${bamfile}" -o "\${output_dir}\${bamfile}.junc"

# Add the path to the junction file to the text file
echo "\${output_dir}\${bamfile}.junc" >> "\${bam_dir}juncfiles.txt"

echo "Junction file for \${bamfile} created successfully."
EOL

    # Submit the Slurm script and capture the JobID
    job_id=$(sbatch "$script" | awk '{print $NF}')

    # Display debugging information
    echo "Script created and submitted for ${sample_name}."
    echo "Script path: $script"
    echo "Output file: ${output_file}"
    echo "Error file: ${error_file}"
    echo "JobID: $job_id"
    echo ""
done

